# This file makes the dynamic libraries and copies them in ../lib folder
# *_build target "makes" the libraries.
# *_cp copies the libraries to ../lib and the header files to ../header_files
# *_clean removes the libraries from their folders as well as ../lib folder

#ASSUMPTIONS: the name of library files are : libwfmalloc.so,
#	      the name of the header files are : wfmalloc.h,
#	      lib and header_files folders are found in ../ folder
#             make files of allocators are found in the folders as defined by their path variables
#	      hoard is built for 64 bit system, else change the argument to make

LIBS = wfmalloc hoard jemalloc
CLEAN_LIBS = wfmalloc_clean hoard_clean jemalloc_clean
LIB_PATH = ../lib
HEADER_PATH = ../header_files
WFMALLOC_PATH = ../../wfmalloc
HOARD_PATH = ../../Hoard
JEMALLOC_PATH = ../../jemalloc

# common targets
all: $(LIBS)

# targets for wfmalloc
wfmalloc: wfmalloc_build wfmalloc_cp

wfmalloc_build:
	cd $(WFMALLOC_PATH)/Release; make; cd -

wfmalloc_cp:
	cp $(WFMALLOC_PATH)/Release/libwfmalloc.so $(LIB_PATH); cp $(WFMALLOC_PATH)/src/wfmalloc.h $(HEADER_PATH) 

wfmalloc_clean:
	cd $(WFMALLOC_PATH)/Release; make clean; cd -; rm -f $(LIB_PATH)/libwfmalloc.so

# targets for hoard
hoard: hoard_build hoard_cp

hoard_build:
	cd $(HOARD_PATH)/src; make -f GNUmakefile all; cd -

hoard_cp:
	cp $(HOARD_PATH)/src/libhoard.so $(LIB_PATH);

hoard_clean:
	cd $(HOARD_PATH)/src; make -f GNUmakefile clean; cd -; rm -f $(LIB_PATH)/libhoard.so


# targets for jemalloc
jemalloc: jemalloc_build jemalloc_cp

jemalloc_build:
	cd $(JEMALLOC_PATH); sh ./configure; make; cd -

jemalloc_cp:
	cp $(JEMALLOC_PATH)/lib/libjemalloc.so $(LIB_PATH);

jemalloc_clean:
	cd $(JEMALLOC_PATH); make clean; cd -; rm -f $(LIB_PATH)/libjemalloc.so

clean: $(CLEAN_LIBS)
